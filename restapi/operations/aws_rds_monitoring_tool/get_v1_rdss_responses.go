// Code generated by go-swagger; DO NOT EDIT.

package aws_rds_monitoring_tool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"aws-rds-monitoring-tool/models"
)

// GetV1RdssOKCode is the HTTP code returned for type GetV1RdssOK
const GetV1RdssOKCode int = 200

/*GetV1RdssOK Fetching of all pod status is successful.

swagger:response getV1RdssOK
*/
type GetV1RdssOK struct {

	/*
	  In: Body
	*/
	Payload models.RDSS `json:"body,omitempty"`
}

// NewGetV1RdssOK creates GetV1RdssOK with default headers values
func NewGetV1RdssOK() *GetV1RdssOK {

	return &GetV1RdssOK{}
}

// WithPayload adds the payload to the get v1 rdss o k response
func (o *GetV1RdssOK) WithPayload(payload models.RDSS) *GetV1RdssOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 rdss o k response
func (o *GetV1RdssOK) SetPayload(payload models.RDSS) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1RdssOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.RDSS{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetV1RdssInternalServerErrorCode is the HTTP code returned for type GetV1RdssInternalServerError
const GetV1RdssInternalServerErrorCode int = 500

/*GetV1RdssInternalServerError Internal server error

swagger:response getV1RdssInternalServerError
*/
type GetV1RdssInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetV1RdssInternalServerError creates GetV1RdssInternalServerError with default headers values
func NewGetV1RdssInternalServerError() *GetV1RdssInternalServerError {

	return &GetV1RdssInternalServerError{}
}

// WithPayload adds the payload to the get v1 rdss internal server error response
func (o *GetV1RdssInternalServerError) WithPayload(payload *models.Error) *GetV1RdssInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 rdss internal server error response
func (o *GetV1RdssInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1RdssInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
